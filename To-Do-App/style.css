/* 
margin:0, padding:0 같은 겉보기엔 의미 없어 보이는 스타일 적용 이유?

브라우저간에 기본적으로 설정된 폰트 크기, 임의의 공백 설정 등에 따라
만들고자 하는 웹사이트에 개발자가 의도하지 않은 공백이 생길 수도 있기 때문

box-sizing : border-box
box-sizing의 default값은 content-box이다.
content-box의 경우 content의 크기만을 고려하였기에 각 요소들의 레이아웃에
문제가 생기는 경우가 발생할 수 있다.
예를 들면, div1과 div2의 content크기는 동일하지만 div1의 border에 20이 들어가있고
div2의 border이 0이라고 하였을 때, 같은 크기를 의도하고 만들었으나 
서로 다른 width,height를 가진 블록이 생성되는 결과가 나오게 된다.
반면, border-box는 padding과 border의 크기까지 width와 height에 포함을 시킨다.
그렇기에, 이런 측면에서 개발자가 의도하지 않은 결과를 내지 않는다.
*/

* {
  margin: 0;
  padding: 0;
  font-family: "Poppins", sans-serif;
  box-sizing: border-box;
}

/* 
vh
1vh는 브라우저 높이값의 100분의 1 
브라우저의 높이값이 900px일때 1vh는 9px

linear-gradient
지정한 색상 중 처음 색상에서 점차적으로
나중의 색상으로 변화하는 효과
container에는 파란색 -> 보라색 방향으로 색이 섞여감
deg는 각도
*/

.container {
  width: 100%;
  min-height: 100vh;
  background: linear-gradient(135deg, #153677, #4e085f);
  padding: 10px;
}

/* 
margin, padding의 속성은 1개, 2개, 3개, 4개 값으로 지정이 가능하다.
한 개의 값은 그 값으로 모든 네 면의 여백을 설정
두 개의 값은 첫 번째는 위,아래, 두 번째는 왼쪽, 오른쪽을 설정
세 개의 값은 첫 번째는 위, 두 번째는 왼쪽, 오른쪽, 세번째는 아래 설정
네 개의 값은 상,우,하,좌 순서대로 설정
*/

.todo-app {
  width: 100%;
  max-width: 540px;
  background-color: #fff;
  margin: 100px auto 20px;
  padding: 40px 30px 70px;
  border-radius: 10px;
}

/* 
.todo-app h2 vs .todo-app > h2
양자 모두 todo-app이라는 클래스를 가진 부모 요소에 딸린 자식 요소들 중,
h2요소에 해당하는 '모든' 자식들을 선택 후 일괄 적용하는 것은 똑같다.
다만, 전자의 경우 h2가 자식 요소이기만 한다면, 자식의 자식의 자식요소여도,
혹은 더 깊은 곳에 존재해도 바꾸는 반면 후자의 경우 직속 자식들만 변경한다.
*/
.todo-app h2 {
  color: #002765;
  display: flex;
  align-items: center;
  margin-bottom: 20px;
}

.todo-app h2 img {
  width: 30px;
  margin-left: 10px;
}

.row {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: #edeef0;
  border-radius: 30px;
  padding-left: 20px;
  margin-bottom: 25px;
}

input {
  flex: 1;
  border: none;
  outline: none;
  background: transparent;
  padding: 10px;
}

button {
  border: none;
  outline: none;
  padding: 16px 50px;
  background: #ff5945;
  color: #fff;
  font-size: 16px;
  cursor: pointer;
  border-radius: 40px;
}

/* 
user-select : none
none으로 설정할 경우, 사용자가 해당 요소를 클릭해서 드래그해서 
강조표시를 하는 등 외부에서의 선택행위가 불가능해진다.
*/

ul li {
  list-style: none;
  font-size: 17px;
  padding: 12px 8px 12px 50px;
  user-select: none;
  cursor: pointer;
  position: relative;
}
ul li::before {
  content: "";
  position: absolute;
  height: 28px;
  width: 28px;
  border-radius: 50%;
  background-image: url(images/unchecked.png);
  background-size: cover;
  background-position: center;
  top: 12px;
  left: 8px;
}

ul li.checked {
  color: #555;
  text-decoration: line-through;
}

ul li.checked::before {
  background-image: url(images/checked.png);
}

ul li span {
  position: absolute;
  right: 0;
  top: 5px;
  width: 40px;
  height: 40px;
  font-size: 22px;
  color: #555;
  line-height: 40px;
  text-align: center;
  border-radius: 50%;
}

ul li span:hover {
  background: #edeef0;
}
